Printing analysis 'Constant Propagation Analysis Pass' for function '__cxx_global_var_init':
representation :   call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation :   %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #1
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation :   ret void
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation : 
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #1
  ret void

#Edge incoming
BOTTOM
BOTTOM

#Edge outcoming
BOTTOM


Printing analysis 'Constant Propagation Analysis Pass' for function 'main':
representation :   call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation :   %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #1
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation :   ret void
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation : 
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #1
  ret void

#Edge incoming
BOTTOM
BOTTOM

#Edge outcoming
BOTTOM


representation :   %retval = alloca i32, align 4
#Edge incoming
BOTTOM

#Edge outcoming
TOP


representation :   %x = alloca float, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %y = alloca float, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %z = alloca i32, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %z_ = alloca float, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %a1 = alloca i16, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %a2 = alloca i16, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i32 0, i32* %retval
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store float 0x400921CAC0000000, float* %x, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store float 0x4022C28F60000000, float* %y, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %0 = load float* %x, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv = fptosi float %0 to i32
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i32 %conv, i32* %z, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %1 = load float* %y, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv1 = fptosi float %1 to i32
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i32 %conv1, i32* %z, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %2 = load i32* %z, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv2 = sitofp i32 %2 to float
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %3 = load float* %y, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %add = fadd float %conv2, %3
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store float %add, float* %z_, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %4 = load float* %y, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %add3 = fadd float %4, 9.000000e+00
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store float %add3, float* %z_, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %5 = load float* %x, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %add4 = fadd float %5, 9.000000e+00
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv5 = fptosi float %add4 to i32
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i32 %conv5, i32* %z, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i16 1, i16* %a1, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %6 = load i16* %a1, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv6 = zext i16 %6 to i32
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %shl = shl i32 %conv6, 3
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv7 = trunc i32 %shl to i16
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i16 %conv7, i16* %a2, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   ret i32 0
#Edge incoming
TOP

#Edge outcoming
TOP


representation : 
entry:
  %retval = alloca i32, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca i32, align 4
  %z_ = alloca float, align 4
  %a1 = alloca i16, align 2
  %a2 = alloca i16, align 2
  store i32 0, i32* %retval
  store float 0x400921CAC0000000, float* %x, align 4
  store float 0x4022C28F60000000, float* %y, align 4
  %0 = load float* %x, align 4
  %conv = fptosi float %0 to i32
  store i32 %conv, i32* %z, align 4
  %1 = load float* %y, align 4
  %conv1 = fptosi float %1 to i32
  store i32 %conv1, i32* %z, align 4
  %2 = load i32* %z, align 4
  %conv2 = sitofp i32 %2 to float
  %3 = load float* %y, align 4
  %add = fadd float %conv2, %3
  store float %add, float* %z_, align 4
  %4 = load float* %y, align 4
  %add3 = fadd float %4, 9.000000e+00
  store float %add3, float* %z_, align 4
  %5 = load float* %x, align 4
  %add4 = fadd float %5, 9.000000e+00
  %conv5 = fptosi float %add4 to i32
  store i32 %conv5, i32* %z, align 4
  store i16 1, i16* %a1, align 2
  %6 = load i16* %a1, align 2
  %conv6 = zext i16 %6 to i32
  %shl = shl i32 %conv6, 3
  %conv7 = trunc i32 %shl to i16
  store i16 %conv7, i16* %a2, align 2
  ret i32 0

#Edge incoming
TOP
TOP

#Edge outcoming
TOP


Printing analysis 'Constant Propagation Analysis Pass' for function '_GLOBAL__I_a':
representation :   call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation :   %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #1
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation :   ret void
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation : 
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %0 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #1
  ret void

#Edge incoming
BOTTOM
BOTTOM

#Edge outcoming
BOTTOM


representation :   %retval = alloca i32, align 4
#Edge incoming
BOTTOM

#Edge outcoming
TOP


representation :   %x = alloca float, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %y = alloca float, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %z = alloca i32, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %z_ = alloca float, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %a1 = alloca i16, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %a2 = alloca i16, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i32 0, i32* %retval
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store float 0x400921CAC0000000, float* %x, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store float 0x4022C28F60000000, float* %y, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %0 = load float* %x, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv = fptosi float %0 to i32
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i32 %conv, i32* %z, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %1 = load float* %y, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv1 = fptosi float %1 to i32
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i32 %conv1, i32* %z, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %2 = load i32* %z, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv2 = sitofp i32 %2 to float
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %3 = load float* %y, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %add = fadd float %conv2, %3
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store float %add, float* %z_, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %4 = load float* %y, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %add3 = fadd float %4, 9.000000e+00
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store float %add3, float* %z_, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %5 = load float* %x, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %add4 = fadd float %5, 9.000000e+00
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv5 = fptosi float %add4 to i32
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i32 %conv5, i32* %z, align 4
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i16 1, i16* %a1, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %6 = load i16* %a1, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv6 = zext i16 %6 to i32
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %shl = shl i32 %conv6, 3
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   %conv7 = trunc i32 %shl to i16
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   store i16 %conv7, i16* %a2, align 2
#Edge incoming
TOP

#Edge outcoming
TOP


representation :   ret i32 0
#Edge incoming
TOP

#Edge outcoming
TOP


representation : 
entry:
  %retval = alloca i32, align 4
  %x = alloca float, align 4
  %y = alloca float, align 4
  %z = alloca i32, align 4
  %z_ = alloca float, align 4
  %a1 = alloca i16, align 2
  %a2 = alloca i16, align 2
  store i32 0, i32* %retval
  store float 0x400921CAC0000000, float* %x, align 4
  store float 0x4022C28F60000000, float* %y, align 4
  %0 = load float* %x, align 4
  %conv = fptosi float %0 to i32
  store i32 %conv, i32* %z, align 4
  %1 = load float* %y, align 4
  %conv1 = fptosi float %1 to i32
  store i32 %conv1, i32* %z, align 4
  %2 = load i32* %z, align 4
  %conv2 = sitofp i32 %2 to float
  %3 = load float* %y, align 4
  %add = fadd float %conv2, %3
  store float %add, float* %z_, align 4
  %4 = load float* %y, align 4
  %add3 = fadd float %4, 9.000000e+00
  store float %add3, float* %z_, align 4
  %5 = load float* %x, align 4
  %add4 = fadd float %5, 9.000000e+00
  %conv5 = fptosi float %add4 to i32
  store i32 %conv5, i32* %z, align 4
  store i16 1, i16* %a1, align 2
  %6 = load i16* %a1, align 2
  %conv6 = zext i16 %6 to i32
  %shl = shl i32 %conv6, 3
  %conv7 = trunc i32 %shl to i16
  store i16 %conv7, i16* %a2, align 2
  ret i32 0

#Edge incoming
TOP
TOP

#Edge outcoming
TOP


representation :   call void @__cxx_global_var_init()
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation :   ret void
#Edge incoming
BOTTOM

#Edge outcoming
BOTTOM


representation : 
entry:
  call void @__cxx_global_var_init()
  ret void

#Edge incoming
BOTTOM
BOTTOM

#Edge outcoming
BOTTOM


